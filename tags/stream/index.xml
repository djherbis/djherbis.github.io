<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stream on djherbis</title>
    <link>https://djherbis.com/tags/stream/</link>
    <description>Recent content in Stream on djherbis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Mar 2015 14:48:31 -0400</lastBuildDate>
    
	<atom:link href="https://djherbis.com/tags/stream/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>#golang stream caching</title>
      <link>https://djherbis.com/post/fscache/</link>
      <pubDate>Sat, 28 Mar 2015 14:48:31 -0400</pubDate>
      
      <guid>https://djherbis.com/post/fscache/</guid>
      <description>djherbis/fscache      
Objective  Our Web server needs to perform an “expensive” process to create downloads. We want to cache these files so they don’t have to be generated on every request. If two or more concurrent clients ask for the same file, don’t generate it twice.  A naive cache design might look like this: 
Well the above code is pretty bad. We’re blocking all requests while the cache is being written to.</description>
    </item>
    
  </channel>
</rss>