<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Streaming on djherbis </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://localhost:1313/tags/streaming/</link>
    <language>en-us</language>
    
    
    <updated>Sat, 28 Mar 2015 14:48:31 -0400</updated>
    
    <item>
      <title>#golang stream caching</title>
      <link>http://localhost:1313/post/fscache/</link>
      <pubDate>Sat, 28 Mar 2015 14:48:31 -0400</pubDate>
      
      <guid>http://localhost:1313/post/fscache/</guid>
      <description>djherbis/fscache Objective Our Web server needs to perform an &amp;ldquo;expensive&amp;rdquo; process to create downloads. We want to cache these files so they don&amp;rsquo;t have to be generated on every request. If two or more concurrent clients ask for the same file, don&amp;rsquo;t generate it twice. A naive cache design might look like this: div.file-data table { width: 100%; } Well the above code is pretty bad. We&amp;rsquo;re blocking all requests while the cache is being written to.</description>
    </item>
    
  </channel>
</rss>

